name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
        
    - name: Run backend tests
      run: |
        pytest tests/ -v
        
    - name: Test frontend files exist
      run: |
        echo "Checking frontend files..."
        ls -la src/frontend/
        test -f src/frontend/index.html && echo "✓ index.html exists"
        test -f src/frontend/style.css && echo "✓ style.css exists"
        test -f src/frontend/app.js && echo "✓ app.js exists"

  lint-frontend:
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Validate HTML
      run: |
        echo "Validating HTML structure..."
        if [ -f src/frontend/index.html ]; then
          grep -q "<!DOCTYPE html>" src/frontend/index.html && echo "✓ Valid DOCTYPE"
          grep -q "<title>" src/frontend/index.html && echo "✓ Title exists"
        fi
        
    - name: Validate CSS
      run: |
        echo "Validating CSS structure..."
        if [ -f src/frontend/style.css ]; then
          test -s src/frontend/style.css && echo "✓ CSS file is not empty"
        fi

  build-status:
    runs-on: ubuntu-latest
    needs: [test-backend, lint-frontend]
    if: always()
    
    steps:
    - name: Build status
      run: |
        echo "CI/CD Pipeline completed"
        echo "Backend tests: ${{ needs.test-backend.result }}"
        echo "Frontend lint: ${{ needs.lint-frontend.result }}"
